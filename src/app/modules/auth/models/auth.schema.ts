// ðŸŽ¯ SCHEMA - Zod validation schemas for auth forms

import { z } from 'zod';

export const loginSchema = z.object({
  email: z.string().email('Email khÃ´ng há»£p lá»‡'),
  password: z.string().min(6, 'Máº­t kháº©u pháº£i cÃ³ Ã­t nháº¥t 6 kÃ½ tá»±'),
});

export const registerSchema = z
  .object({
    email: z.string().email('Email khÃ´ng há»£p lá»‡'),
    password: z.string().min(6, 'Máº­t kháº©u pháº£i cÃ³ Ã­t nháº¥t 6 kÃ½ tá»±'),
    confirmPassword: z.string().min(6, 'XÃ¡c nháº­n máº­t kháº©u pháº£i cÃ³ Ã­t nháº¥t 6 kÃ½ tá»±'),
    name: z.string().min(1, 'TÃªn khÃ´ng Ä‘Æ°á»£c Ä‘á»ƒ trá»‘ng'),
    phone: z.string().optional(),
  })
  .refine((data) => data.password === data.confirmPassword, {
    message: 'Máº­t kháº©u xÃ¡c nháº­n khÃ´ng khá»›p',
    path: ['confirmPassword'],
  });

export const forgotPasswordSchema = z.object({
  email: z.string().email('Email khÃ´ng há»£p lá»‡'),
});

export const resetPasswordSchema = z
  .object({
    token: z.string().min(1, 'Token khÃ´ng Ä‘Æ°á»£c Ä‘á»ƒ trá»‘ng'),
    password: z.string().min(6, 'Máº­t kháº©u pháº£i cÃ³ Ã­t nháº¥t 6 kÃ½ tá»±'),
    confirmPassword: z.string().min(6, 'XÃ¡c nháº­n máº­t kháº©u pháº£i cÃ³ Ã­t nháº¥t 6 kÃ½ tá»±'),
  })
  .refine((data) => data.password === data.confirmPassword, {
    message: 'Máº­t kháº©u xÃ¡c nháº­n khÃ´ng khá»›p',
    path: ['confirmPassword'],
  });

// Export types tá»« schemas
export type LoginFormData = z.infer<typeof loginSchema>;
export type RegisterFormData = z.infer<typeof registerSchema>;
export type ForgotPasswordFormData = z.infer<typeof forgotPasswordSchema>;
export type ResetPasswordFormData = z.infer<typeof resetPasswordSchema>;
